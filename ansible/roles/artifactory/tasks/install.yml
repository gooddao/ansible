---
- debug:
    msg: "Performing installation of Artifactory..."

- name: create group for artifactory
  group:
    name: "{{ artifactory_group }}"
    state: present
  become: yes

- name: create user for artifactory
  user:
    name: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
    system: yes
  become: yes

- name: ensure jfrog_home_directory exists
  file:
    path: "{{ jfrog_home_directory }}"
    state: directory
  become: yes

- name: Copy local artifactory rpm
  copy:
    src: "{{ local_artifactory_rpm }}"
    dest: "{{ jfrog_home_directory }}"
  become: yes
  when: local_artifactory_rpm is defined

- name: install artifactory
  yum:
      name: "{{ jfrog_home_directory }}/{{ local_artifactory_rpm }}"
      state: present

- name: ensure artifactory_file_store_dir exists
  file:
    path: "{{ artifactory_file_store_dir }}"
    state: directory
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
  become: yes

- name: ensure data exists
  file:
    path: "{{ artifactory_home }}/var/data"
    state: directory
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
  become: yes

- name: ensure etc exists
  file:
    path: "{{ artifactory_home }}/var/etc"
    state: directory
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
  become: yes

- name: use specified system yaml
  copy:
    src: "{{ artifactory_system_yaml }}"
    dest: "{{ artifactory_home }}/var/etc/system.yaml"
  become: yes
  when: artifactory_system_yaml is defined

- name: configure system yaml template
  template:
    src: "{{ artifactory_system_yaml_template }}"
    dest: "{{ artifactory_home }}/var/etc/system.yaml"
  become: yes
  when: artifactory_system_yaml is not defined

- name: ensure {{ artifactory_home }}/var/etc/security/ exists
  file:
    path: "{{ artifactory_home }}/var/etc/security/"
    state: directory
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
  become: yes

- name: Copy local database driver
  copy:
    src: "{{ db_local_location }}"
    dest: "{{ artifactory_home }}/var/bootstrap/artifactory/tomcat/lib"
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
  when: db_local_location is defined
  become: yes
  
- name: download database driver
  get_url:
    url: "{{ db_download_url }}"
    dest: "{{ artifactory_home }}/var/bootstrap/artifactory/tomcat/lib"
    owner: "{{ artifactory_user }}"
    group: "{{ artifactory_group }}"
  when: db_download_url is defined
  become: yes

- name: create artifactory service
  shell: "{{ artifactory_home }}/app/bin/installService.sh"
  become: yes

- name: Ensure permissions are correct
  file:
    path: "{{ jfrog_home_directory }}"
    group: "{{ artifactory_group }}"
    owner: "{{ artifactory_user }}"
    recurse: yes
  become: yes

- name: start and enable the primary node
  service:
    name: artifactory
    state: started
  become: yes
  when: artifactory_is_primary == true

- name: random wait before restarting to prevent secondary nodes from hitting DB first
  pause:
    seconds: "{{ 120 | random + 10}}"
  when: artifactory_is_primary == false

- name: start and enable the secondary nodes
  service:
    name: artifactory
    state: started
  become: yes
  when: artifactory_is_primary == false
